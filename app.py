from flask import Flask, request, jsonify
from twilio.rest import Client
import os
from dotenv import load_dotenv
import requests

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

app = Flask(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Twilio
TWILIO_ACCOUNT_SID = os.getenv('TWILIO_ACCOUNT_SID')
TWILIO_AUTH_TOKEN = os.getenv('TWILIO_AUTH_TOKEN')
TWILIO_WHATSAPP_NUMBER = os.getenv('TWILIO_WHATSAPP_NUMBER')
PORT = int(os.getenv('PORT', 5000))
BITRIX_WEBHOOK_URL = os.getenv('BITRIX_WEBHOOK_URL')

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Twilio –∫–ª–∏–µ–Ω—Ç–∞
client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Å–µ—Å—Å–∏–π (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Redis –∏–ª–∏ –ë–î)
sessions = {}

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Å—Å–∏—è–º–∏ ===
def get_session(phone):
    if phone not in sessions:
        sessions[phone] = {"stage": "menu", "data": {}}
    return sessions[phone]

def clear_session(phone):
    if phone in sessions:
        sessions[phone] = {"stage": "menu", "data": {}}

# === –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ WhatsApp ===
def send_whatsapp_message(phone, message):
    try:
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å whatsapp: –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        to_number = f"whatsapp:{phone}" if not phone.startswith('whatsapp:') else phone
        
        message = client.messages.create(
            body=message,
            from_=TWILIO_WHATSAPP_NUMBER,
            to=to_number
        )
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {message.sid}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return False

# === –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Bitrix24 ===
def send_lead_to_bitrix(name, city, format_type, goal, phone):
    if not BITRIX_WEBHOOK_URL:
        print("‚ö†Ô∏è Bitrix webhook –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        return False
    
    try:
        goal_names = {
            "1": "–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è",
            "2": "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", 
            "3": "–ó–∞—â–∏—Ç–∞",
            "4": "–ö—Ä–µ–¥–∏—Ç—ã"
        }
        
        data = {
            "fields": {
                "TITLE": f"–õ–∏–¥ –∏–∑ WhatsApp: {name}",
                "NAME": name,
                "PHONE": [{"VALUE": phone, "VALUE_TYPE": "WORK"}],
                "COMMENTS": f"–ì–æ—Ä–æ–¥: {city}\n–§–æ—Ä–º–∞—Ç: {format_type}\n–¶–µ–ª—å: {goal_names.get(goal, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
            }
        }
        
        response = requests.post(BITRIX_WEBHOOK_URL, json=data)
        if response.status_code == 200:
            print("‚úÖ –õ–∏–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Bitrix24")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ Bitrix24: {response.text}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Bitrix24: {e}")
        return False

# === Webhook –¥–ª—è –ø—Ä–∏–µ–º–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@app.route("/webhook", methods=["POST"])
def webhook():
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Twilio
        from_number = request.values.get('From', '')
        body = request.values.get('Body', '').strip()
        
        print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {from_number}: {body}")
        
        # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å whatsapp: –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –Ω–æ–º–µ—Ä–æ–º
        phone = from_number.replace('whatsapp:', '')
        session = get_session(phone)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        handle_message(phone, body.lower(), session)
        
        return jsonify({"status": "ok"}), 200
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ webhook: {e}")
        return jsonify({"error": str(e)}), 500

# === GET endpoint –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ ===
@app.route("/webhook", methods=["GET"])
def webhook_get():
    return "WhatsApp Bot is running! ü§ñ", 200

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
def handle_message(phone, text, session):
    stage = session["stage"]
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç—Ä–∏–≥–≥–µ—Ä—ã
    if "—Å–ø–∞—Å–∏–±–æ —è –æ–±–¥—É–º–∞—é –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ" in text:
        send_whatsapp_message(phone, "–ë–ª–∞–≥–æ–¥–∞—Ä—é –≤–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üôè\n\n–ü—Ä–∏–Ω–∏–º–∞–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ —Å–ø–æ–∫–æ–π–Ω–æ ‚Äî –º—ã –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏, –∫–æ–≥–¥–∞ –≤—ã –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã. –£–¥–∞—á–∏ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –±—É–¥—É—â–µ–≥–æ! üíº\n\n–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–µ—Ç–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é'.")
        return
    
    if text == "–º–µ–Ω—é" or text == "menu":
        show_menu(phone, session)
        return
    
    # –õ–æ–≥–∏–∫–∞ –∞–Ω–∫–µ—Ç—ã
    if stage == "await_name":
        session["data"]["name"] = text.title()
        session["stage"] = "await_city"
        send_whatsapp_message(phone, f"–°–ø–∞—Å–∏–±–æ, {text.title()}! üëã\n\n–í –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å?")
    
    elif stage == "await_city":
        session["data"]["city"] = text.title()
        session["stage"] = "await_format"
        send_whatsapp_message(phone, "–ö–∞–∫ –≤–∞–º —É–¥–æ–±–Ω–µ–µ –ø—Ä–æ–π—Ç–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é?\n\n1Ô∏è‚É£ –û–Ω–ª–∞–π–Ω\n2Ô∏è‚É£ –û—Ñ—Ñ–ª–∞–π–Ω\n\n–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É 1 –∏–ª–∏ 2")
    
    elif stage == "await_format":
        if text == "1":
            session["data"]["format"] = "–û–Ω–ª–∞–π–Ω"
            session["stage"] = "await_goal"
            send_goal_options(phone)
        elif text == "2":
            session["data"]["format"] = "–û—Ñ—Ñ–ª–∞–π–Ω"
            session["stage"] = "await_goal"
            send_goal_options(phone)
        else:
            send_whatsapp_message(phone, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ 1 (–û–Ω–ª–∞–π–Ω) –∏–ª–∏ 2 (–û—Ñ—Ñ–ª–∞–π–Ω)")
    
    elif stage == "await_goal":
        if text in ["1", "2", "3", "4"]:
            session["data"]["goal"] = text
            save_lead(phone, session)
        else:
            send_whatsapp_message(phone, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 4")
    
    else:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é
        if text == "1" or "–∑–∞–ø–∏—Å–∞—Ç—å—Å—è" in text:
            start_consultation(phone, session)
        elif text == "2" or "–≤–æ–ø—Ä–æ—Å—ã" in text or "faq" in text:
            send_faq(phone)
        elif text == "3" or "—É—Å–ª—É–≥–∏" in text:
            send_services(phone)
        else:
            show_menu(phone, session)

def send_goal_options(phone):
    message = (
        "–ö–∞–∫–æ–≤–∞ –≤–∞—à–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å?\n\n"
        "1Ô∏è‚É£ –ù–∞–∫–æ–ø–ª–µ–Ω–∏—è\n"
        "2Ô∏è‚É£ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏\n"
        "3Ô∏è‚É£ –ó–∞—â–∏—Ç–∞\n"
        "4Ô∏è‚É£ –ö—Ä–µ–¥–∏—Ç—ã\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É –æ—Ç 1 –¥–æ 4"
    )
    send_whatsapp_message(phone, message)

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def show_menu(phone, session):
    session["stage"] = "menu"
    message = (
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DVAG! üëã
‚îÇ       "–Ø –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–º—É –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é.\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç.\n\n"
        "1Ô∏è‚É£ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é\n"
        "2Ô∏è‚É£ –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n"
        "3Ô∏è‚É£ –ù–∞—à–∏ —É—Å–ª—É–≥–∏\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ —Ü–∏—Ñ—Ä—É –∏–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ"
    )
    send_whatsapp_message(phone, message)

# === –ù–∞—á–∞–ª–æ –∞–Ω–∫–µ—Ç—ã ===
def start_consultation(phone, session):
    session["stage"] = "await_name"
    session["data"] = {}
    send_whatsapp_message(phone, "–û—Ç–ª–∏—á–Ω–æ! –ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?")

# === –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã ===
def send_faq(phone):
    faq_text = (
        "‚ùì *–ë–µ—Å–ø–ª–∞—Ç–Ω–∞ –ª–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è?*\n"
        "–î–∞, –ø–µ—Ä–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äî –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –∏ –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.\n\n"
        
        "‚ùì *–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–Ω–ª–∞–π–Ω-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è?*\n"
        "–ß–µ—Ä–µ–∑ Zoom, WhatsApp –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω. –°—Å—ã–ª–∫—É –ø—Ä–∏—à–ª—ë–º –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏.\n\n"
        
        "‚ùì *–ù—É–∂–Ω—ã –ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã?*\n"
        "–ù–µ—Ç, –Ω–∞ –ø–µ—Ä–≤–æ–π –≤—Å—Ç—Ä–µ—á–µ –º—ã —Ç–æ–ª—å–∫–æ –æ–±—Å—É–∂–¥–∞–µ–º —Ü–µ–ª–∏.\n\n"
        
        "‚ùì *–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ —Å –∏–Ω–æ—Å—Ç—Ä–∞–Ω—Ü–∞–º–∏?*\n"
        "–î–∞, –º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –≤—Å–µ—Ö, –∫—Ç–æ –∂–∏–≤—ë—Ç –≤ –ì–µ—Ä–º–∞–Ω–∏–∏.\n\n"
        
        "‚ùì *DVAG ‚Äî —ç—Ç–æ –±–∞–Ω–∫?*\n"
        "–ù–µ—Ç. DVAG ‚Äî –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ 700+ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º.\n\n"
        
        "–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è: –Ω–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é'"
    )
    send_whatsapp_message(phone, faq_text)

# === –£—Å–ª—É–≥–∏ ===
def send_services(phone):
    services_text = (
        "üíº *–ù–∞—à–∏ —É—Å–ª—É–≥–∏:*\n\n"
        
        "üí∞ *1. –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ*\n"
        "‚Äî –ë—é–¥–∂–µ—Ç, –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è, —Ü–µ–ª–∏\n\n"
        
        "üìà *2. –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –ø–µ–Ω—Å–∏—è*\n"
        "‚Äî Riester, R√ºrup, —á–∞—Å—Ç–Ω—ã–µ –ø–µ–Ω—Å–∏–æ–Ω–Ω—ã–µ —Ñ–æ–Ω–¥—ã\n\n"
        
        "üõ°Ô∏è *3. –ó–∞—â–∏—Ç–∞ –∏ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ*\n"
        "‚Äî –ñ–∏–∑–Ω—å, –∑–¥–æ—Ä–æ–≤—å–µ, –∏–º—É—â–µ—Å—Ç–≤–æ\n\n"
        
        "üè¶ *4. –ö—Ä–µ–¥–∏—Ç—ã –∏ —Ä–µ—Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏–µ*\n"
        "‚Äî –ü–æ–¥–±–æ—Ä —Å—Ç–∞–≤–æ–∫, –∏–ø–æ—Ç–µ–∫–∞\n\n"
        
        "–í—Å–µ —Ä–µ—à–µ–Ω–∏—è ‚Äî –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ.\n\n"
        "–ù–∞–ø–∏—à–∏—Ç–µ '–º–µ–Ω—é', —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è."
    )
    send_whatsapp_message(phone, services_text)

# === –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–∏–¥–∞ ===
def save_lead(phone, session):
    data = session["data"]
    name = data["name"]
    city = data["city"]
    fmt = data["format"]
    goal = data["goal"]
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Bitrix24
    success = send_lead_to_bitrix(name, city, fmt, goal, phone=phone)
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    goal_names = {"1": "–ù–∞–∫–æ–ø–ª–µ–Ω–∏—è", "2": "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "3": "–ó–∞—â–∏—Ç–∞", "4": "–ö—Ä–µ–¥–∏—Ç—ã"}
    summary = (
        f"–°–ø–∞—Å–∏–±–æ, {name}! ‚úÖ\n\n"
        f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞–Ω—ã:\n"
        f"‚Äî –ì–æ—Ä–æ–¥: {city}\n"
        f"‚Äî –§–æ—Ä–º–∞—Ç: {fmt}\n"
        f"‚Äî –¶–µ–ª—å: {goal_names.get(goal, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}\n\n"
        "üìÖ –í —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üíº"
    )
    send_whatsapp_message(phone, summary)
    
    # –°–±—Ä–æ—Å —Å–µ—Å—Å–∏–∏
    clear_session(phone)

# === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
if __name__ == "__main__":
    print("ü§ñ –ó–∞–ø—É—Å–∫ WhatsApp –±–æ—Ç–∞...")
    print(f"üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É {PORT}")
    app.run(host="0.0.0.0", port=PORT, debug=True)
